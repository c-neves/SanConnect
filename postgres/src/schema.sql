CREATE TABLE _USER (
	EMAIL VARCHAR (64) NOT NULL,
	PASSWORD CHAR (60) NOT NULL,
	NAME VARCHAR (64) NOT NULL,
	DESCRIPTION TEXT,
	PICTURE TEXT,
	LIKES INTEGER DEFAULT 0 NOT NULL,
	DISLIKES INTEGER DEFAULT 0 NOT NULL,
	CONSTRAINT _PK_USER_0 PRIMARY KEY (EMAIL),
	CONSTRAINT _CK_USER_0 CHECK (LIKES >= 0),
	CONSTRAINT _CK_USER_1 CHECK (DISLIKES >= 0),
	CONSTRAINT _CK_USER_2 CHECK (EMAIL ~* '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+[.][A-Za-z.]+$')
);

CREATE TABLE EVENT (
	ID BIGSERIAL NOT NULL,
	CREATOR VARCHAR (64) NOT NULL,
	TITLE VARCHAR (32) NOT NULL,
	BEGINS_AT TIMESTAMP (0) NOT NULL,
	DESCRIPTION TEXT,
	MIN_PARTICIPANTS SMALLINT DEFAULT 2 NOT NULL,
	MAX_PARTICIPANTS SMALLINT,
	CREATED_AT TIMESTAMP (0) NOT NULL,
	LOCATION VARCHAR (64) NOT NULL,
	CONSTRAINT PK_EVENT_0 PRIMARY KEY (ID),
	CONSTRAINT UK_EVENT_0 UNIQUE (CREATOR, TITLE, BEGINS_AT),
	CONSTRAINT FK_EVENT_0 FOREIGN KEY (CREATOR)
		REFERENCES _USER (EMAIL)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT CK_EVENT_0 CHECK (MAX_PARTICIPANTS IS NULL OR MAX_PARTICIPANTS >= MIN_PARTICIPANTS),
	CONSTRAINT CK_EVENT_1 CHECK (MIN_PARTICIPANTS >= 2),
	CONSTRAINT CK_EVENT_2 CHECK (CREATED_AT < BEGINS_AT)
);

CREATE TABLE CATEGORY (
	NAME VARCHAR (32) NOT NULL,
	CONSTRAINT PK_CATEGORY_0 PRIMARY KEY (NAME)
);

CREATE TABLE PARTICIPATES (
	EVENT BIGINT NOT NULL,
	PARTICIPANT VARCHAR (64) NOT NULL,
	CONFIRMATION BOOLEAN DEFAULT FALSE NOT NULL,
	CREATED_AT TIMESTAMP (0) NOT NULL,
	CONSTRAINT PK_PARTICIPATES_0 PRIMARY KEY (EVENT, PARTICIPANT),
	CONSTRAINT FK_PARTICIPATES_0 FOREIGN KEY (EVENT)
		REFERENCES EVENT(ID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_PARTICIPATES_1 FOREIGN KEY (PARTICIPANT)
		REFERENCES _USER (EMAIL)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT CK_PARTICIPATES_0 CHECK (CREATED_AT < BEGINS_AT)
);

CREATE TABLE RATES (
	SOURCE VARCHAR (64) NOT NULL,
	TARGET VARCHAR (64) NOT NULL,
	EVENT BIGINT NOT NULL,
	VALUE SMALLINT NOT NULL,
	CONSTRAINT PK_RATES_0 PRIMARY KEY (SOURCE, TARGET, EVENT),
	CONSTRAINT FK_RATES_0 FOREIGN KEY (SOURCE, EVENT)
		REFERENCES PARTICIPATES (PARTICIPANT, EVENT)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_RATES_1 FOREIGN KEY (TARGET, EVENT)
		REFERENCES PARTICIPATES (PARTICIPANT, EVENT)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT CK_RATES_0 CHECK (VALUE IN (-1, 1)),
	CONSTRAINT CK_RATES_1 CHECK (SOURCE <> TARGET)
);

CREATE TABLE EVENT_CATEGORY (
	CATEGORY VARCHAR (32) NOT NULL,
	EVENT BIGINT NOT NULL,
	CONSTRAINT PK_EVENT_CATEGORY_0 PRIMARY KEY (CATEGORY, EVENT),
	CONSTRAINT FK_EVENT_CATEGORY_0 FOREIGN KEY (CATEGORY)
		REFERENCES CATEGORY (NAME)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_EVENT_CATEGORY_1 FOREIGN KEY (EVENT)
		REFERENCES EVENT (ID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE PREFERENCE (
	_USER VARCHAR (64) NOT NULL,
	CATEGORY VARCHAR (32) NOT NULL,
	ESCALA REAL DEFAULT 0,
	CONSTRAINT PK_PREFERENCE_0 PRIMARY KEY (_USER, CATEGORY),
	CONSTRAINT FK_PREFERENCE_0 FOREIGN KEY (_USER)
		REFERENCES _USER (EMAIL)
		ON DELETE CASCADE
		ON DELETE CASCADE,
	CONSTRAINT FK_PREFERENCE_1 FOREIGN KEY (CATEGORY)
		REFERENCES CATEGORY (NAME)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT CK_PREFERENCE_0 CHECK (ESCALA >= 0 AND ESCALA <= 1)
);
